<?php
$isDisableFrontEnd = Mage::getStoreConfig('menupro/setting/enable');
if ($isDisableFrontEnd == 0) {
	return;
}
/* Get Group Permission Id of current login */
$permission = Mage::helper ( "menupro" )->authenticate ();
/* Get Group Menu Id form layout file: frontend/../layout/menupro.xml */
$groupId = $this->getGroupId ();
$menuCollection = $this->getMenuCollection ( $groupId, $permission);

$DHTML = "";
$switcher = 0;
$groupInfo = $this->getGroupInfo($groupId);
$_groupPosition = $groupInfo['position'];

$arrow = $this->getArrow($_groupPosition);
$arrowForSub = $this->getSubArrow($_groupPosition);

if ($menuCollection != NULL) {
	$DHTML .= "<ul class='level0 " . $this->getGroupOptions($groupId) . "'>";
	foreach ( $menuCollection as $menu ) {
		if ($menu->getParentId () == 0) {
			$data = $this->getMenuData ( $menu, $permission);
			//If responsive of group is switcher
			$groupInfo = $this->getGroupInfo($groupId);
			if ($groupInfo['responsive'] == "menu-creator-pro-rp-switcher") {
				if ($switcher == 0) {
					$DHTML .= '<li class="switcher"><a href="#"><i class="icon-reorder"></i>Menu</a></li>';
				}
				$switcher++;
			}
			// ==== Level 0 ====== //
			$DHTML .= '<li class="' . $data ['liClasses'] . ' level0 ">';
			if ($data ['block'] != '') {
				$DHTML .= "<div class='static-block ". $data['liClasses'] ."'>" . $data ['block'] . "</div>";
			} else {
				if (count ( $data ['childcollection'] ) > 0) {
					$aContent = $data ['aIcon'] . $data ['aImage'] . $this->__($data ['aText']);
					$DHTML .= '<a title="' . $menu->getTitle() . '" href=" ' . $data ['aHref'] . '" target="' . $data ['target'] . '"> ' . $aContent . '</a>' . $arrow;
				} else {
					/**
					 * With menu level = 0; when select autosub; show dropdown
					 * menu like default*
					 */
					$dataHover = $caret = $dropdownT  = $plus = "";
					if ($data['isAutoShowSub'] == true) {
						$dataHover = $this->_data_hover;
						$dropdownT = $this->_dropdown_toggle;
						$caret = $arrow;
						$plus = $this->_plus;
					}
					$aContent = $data ['aIcon'] . $data ['aImage'] . $this->__($data ['aText']);
					$DHTML .= "<a title='". $menu->getTitle() ."' href='" . $data ['aHref'] . "' target='" . $data ['target'] . "' " . $dataHover . ">" . $aContent ."</a>" . $caret;
					if ($data['isAutoShowSub'] == true) {
						//Auto show sub menu in level 0;
						$DHTML .= "<div class='grid-container3'>";
						$DHTML .= $this->autoSub ( $menu->getUrlValue (), $menu->getAutosub (), false, 3, $arrowForSub, $arrowForSub );
						$DHTML .= "</div>";
					}
				}   
			}
			
			if (count ( $data ['childcollection'] ) > 0) {
				$menuColumn = $menu->getDropdownColumns();
				if ($menuColumn == 1) {
					// 1 column = 3
					$menuColumn = 3;
				}
				$DHTML .= "<div class='grid-container" . $menuColumn . "'>";
				foreach ( $data ['childcollection'] as $menu1 ) {
					// ======= Sub Header Item (as Level 1) =========//
					$headerData = $this->getMenuData ( $menu1, $permission);
					// Get dropdown as column unit
					$menu1Column = $menu1->getDropdownColumns();
					if ($menu1Column == 1) {
						$menu1Column = 3;
					}
					$DHTML .= "<div class='grid-column grid-column" . $menu1Column . " " . $menu1->getClassSubfix() . " '>";
					if ($menu1->getType () != 6) {
						if ($headerData ['hide_sub_header'] != 1) {
							// Check hide header item or not
							if ($menu1->getType () == 8) {
								$DHTML .= "<span class='divider'></span>";
							} else {
								$aContent = $headerData ['aIcon'] . $headerData ['aImage'] . $headerData ['aText'];
								$DHTML .= "<a title='" . $menu1->getTitle() . "' class='nav-header' href='" . $headerData ['aHref'] . "' target='" . $headerData ['target'] . "'>" . $aContent . "</a>";
							}
						}
						//Not show menu has type = static block//
						$normalArray = array();
						foreach ($headerData['childcollection'] as $menuItem) {
							if ($menuItem->getType() != 6)	{
								$normalArray [] = $menuItem->getMenuId();
							}								
						}
						if (count ( $normalArray ) > 0) {
							$DHTML .= "<ul class='level1'>";
							//$DHTML .= $this->getAutoSubMenuLi ( $menu1->getUrlValue (), $menu1->getAutosub () );
							foreach ( $headerData['childcollection'] as $menu2 ) {
								if (in_array ( $menu2->getMenuId (), $normalArray )) {
									if ($menu2->getType () == 8) {
										$DHTML .= "<li class='divider'></li>";
									} else {
										$data1 = $this->getMenuData ( $menu2, $permission);
										// =========== Level 2 ===============
										$hasSub = $caret = "";
										if (count ( $data1 ['childcollection'] ) > 0 || $data1 ['isAutoShowSub'] == true) {
											$hasSub = "has-submenu";
											$caret = $arrowForSub;
										}
										$DHTML .= "<li class='" . $data1 ['liClasses'] . $hasSub . "'>";
										if (count ( $data1 ['childcollection'] ) > 0) {
											$aContent = $data1 ['aIcon'] . $data1 ['aImage'] . $data1 ['aText'];
											$DHTML .= "<a title='". $menu2->getTitle() ."' href='" . $data1 ['aHref'] . "' target='" . $data1 ['target'] . "'>" . $aContent . "</a>" . $caret;
											$DHTML .= "<div class='grid-container" . $menu1Column . "'>";//Get dropdown_columns value of nav-header
											$DHTML .= "<ul class='level2'>";
											//$DHTML .= $this->getAutoSubMenuLi ( $menu2->getUrlValue (), $menu2->getAutosub () );
											foreach ( $data1 ['childcollection'] as $menu3 ) {
												if ($menu3->getType () == 8) {
													$DHTML .= "<li class='divider'></li>";
												} else {
													$data2 = $this->getMenuData ( $menu3, $permission);
													// ============ Level 3
													$hasSub = $caret = "";
													if (count ( $data2 ['childcollection'] ) > 0 || $data2 ['isAutoShowSub'] == true) {
														$hasSub = "has-submenu";
														$caret = $arrowForSub;
													}
													$DHTML .= "<li class='" . $data2 ['liClasses'] . $hasSub . "'>";
													if (count ( $data2 ['childcollection'] ) > 0) {
														$aContent = $data2 ['aIcon'] . $data2 ['aImage'] . $data2 ['aText'];
														$DHTML .= "<a title='" . $menu3->getTitle() . "' href='" . $data2 ['aHref'] . "' target='" . $data2 ['target'] . "'>" . $aContent . "</a>" . $caret;
														$DHTML .= "<div class='grid-container" . $menu1Column . "'>";
														$DHTML .= "<ul class='level3'>";
														//$DHTML .= $this->getAutoSubMenuLi ( $menu3->getUrlValue (), $menu3->getAutosub () );
														foreach ( $data2 ['childcollection'] as $menu4 ) {
															$data3 = $this->getMenuData ( $menu4, $permission);
															if ($menu4->getType () == 8) {
																$DHTML .= "<li class='divider'></li>";
															} else {
																// =============== Level 4
																$hasSub = $caret = "";
																if (count ( $data3 ['childcollection'] ) > 0 || $data3 ['isAutoShowSub'] == true) {
																	$hasSub = "has-submenu";
																	$caret = $arrowForSub;
																}
																$DHTML .= "<li class='" . $data3 ['liClasses'] . $hasSub . "'>";
																if (count ( $data3 ['childcollection'] ) > 0) {
																	$aContent = $data3 ['aIcon'] . $data3 ['aImage'] . $data3 ['aText'];
																	$DHTML .= "<a title='" . $menu4->getTitle() . "' href='" . $data3 ['aHref'] . "' target='" . $data3 ['target'] . "'>" . $aContent . "</a>" . $caret;
																	$DHTML .= "<div class='grid-container" . $menu1Column . "'>";
																	$DHTML .= "<ul class='level4'>";
																	//$DHTML .= $this->getAutoSubMenuLi ( $menu4->getUrlValue (), $menu4->getAutosub () );
																	foreach ( $data3 ['childcollection'] as $menu5 ) {
																		if ($menu5->getType () == 8) {
																			$DHTML .= "<li class='divider'></li>";
																		} else {
																			$data4 = $this->getMenuData ( $menu5, $permission);
																			// ========
																			// Level
																			// 5
																			// ================//
																			$hasSub = $caret = "";
																			if (count ( $data4 ['childcollection'] ) > 0 || $data4 ['isAutoShowSub'] == true) {
																				$hasSub = "has-submenu";
																				$caret = $arrowForSub;
																			}
																			$DHTML .= "<li class='" . $data4 ['liClasses'] . $hasSub . "'>";
																			$aContent = $data4 ['aIcon'] . $data4 ['aImage'] . $data4 ['aText'];
																			$DHTML .= "<a title='". $menu5->getTitle() ."' href='" . $data4 ['aHref'] . "' target='" . $data4 ['target'] . "'>{$aContent}</a>" . $caret;
																			$DHTML .= "</li>";
																		}
																	}
																	$DHTML .= "</ul>";
																	$DHTML .= "</div>";
																} else {
																	if ($data3 ['block'] != "") {
																		$DHTML .= "<div class='static-block ". $data3['liClasses'] ."'>" . $data3['block'] . "</div>";
																	} else {
																		$dataHover = $dropdownT = $plus = "";
																		if ($data3 ['isAutoShowSub'] == true) {
																			$dataHover = $this->_data_hover;
																			$dropdownT = $this->_dropdown_toggle;
																			$plus = $arrowForSub;
																		}
																		$aContent = $data3 ['aIcon'] . $data3 ['aImage'] . $data3 ['aText'];
																		$DHTML .= "<a title='". $menu4->getTitle() ."' href='" . $data3 ['aHref'] . "' target='" . $data3 ['target'] . "' " . $dataHover . "> " . $aContent . "</a>" . $plus;
																	}
																	if ($data3['isAutoShowSub']) {
																		$DHTML .= "<div class='grid-container3'>";
																		$DHTML .= $this->autoSub ( $menu4->getUrlValue (), $menu4->getAutosub (), false, 3, $arrowForSub );
																		$DHTML .= "</div>";
																	}
																}
																$DHTML .= '</li>';
															}
														}
														$DHTML .= "</ul>";
														$DHTML .= "</div>";
													} else {
														if ($data2 ['block'] != "") {
															$DHTML .= "<div class='static-block ". $data2['liClasses'] ."'>" . $data2 ['block'] . "</div>";
														} else {
															$dataHover = $dropdownT = $plus = "";
															if ($data2 ['isAutoShowSub'] == true) {
																$dataHover = $this->_data_hover;
																$dropdownT = $this->_dropdown_toggle;
																$plus = $arrowForSub;
															}
															$aContent = $data2 ['aIcon'] . $data2 ['aImage'] . $data2 ['aText'];
															$DHTML .= "<a title='". $menu3->getTitle() ."' href='" . $data2 ['aHref'] . "' target='" . $data2 ['target'] . "' " . $dataHover . "> " . $aContent . "</a>" . $plus;
														}
														if ($data2['isAutoShowSub']) {
															$DHTML .= "<div class='grid-container3'>";
															$DHTML .= $this->autoSub ( $menu3->getUrlValue (), $menu3->getAutosub (), false, 3, $arrowForSub );
															$DHTML .= "</div>";
														}
													}
													$DHTML .= "</li>";
												}
											}
											$DHTML .= "</ul>";
											$DHTML .= "</div>";
										} else {
											/**Check menu has selected auto show sub and has sub menu**/
											$dataHover = $dropdownT = $plus = "";
											if ($data1 ['isAutoShowSub'] == true) {
												$dataHover = $this->_data_hover;
												$dropdownT = $this->_dropdown_toggle;
												$plus = $arrowForSub;
											}
											$aContent = $data1 ['aIcon'] . $data1 ['aImage'] . $data1 ['aText'];
											$DHTML .= "<a title='". $menu2->getTitle() ."' href='" . $data1 ['aHref'] . "' target='" . $data1 ['target'] . "' " . $dataHover . "> " . $aContent . "</a>" . $plus;
											if ($data1 ['isAutoShowSub'] == true) {
												$DHTML .= "<div class='grid-container3'>";
												$DHTML .= $this->autoSub ( $menu2->getUrlValue (), $menu2->getAutosub (), false, 3, $arrowForSub );
												$DHTML .= "</div>";
											}
										}
										$DHTML .= "</li>";
									}
								}
							}
							$DHTML .= "</ul>";
						} else {
							if ($headerData['isAutoShowSub']) {
								$showMenuInLevel2 = true;
								$DHTML .= "<div class='grid-container3'>";
								$DHTML .= $this->autoSub ( $menu1->getUrlValue (), $menu1->getAutosub (), $showMenuInLevel2, 3, $arrowForSub );
								$DHTML .= "</div>";
							}
						}
					} else {
						$DHTML .= "<div class='static-block ". $headerData['liClasses'] ."'>" . $headerData ['block'] . "</div>";
					}
					$DHTML .= "</div>";
				}
				$DHTML .= "</div>";
			}
			$DHTML .= "</li>";
		}
	}
	$DHTML .= "</ul>";
}
//-----------Destop HTML----------
echo "<div class='mst'>";
echo $DHTML;
echo "</div>";
//-----------Destop HTML----------
?>
<script type="text/javascript">
var mstMCP = jQuery.noConflict();
mstMCP(document).ready(function($) {
	MCP = {
		activeClass : 'current',
		addActiveClass : function(selector) {
			/* Add active class to parent when a child active */
			var current_url = window.location.href;
			var link = null;
			var li_class = null;
			$(selector + ' li a').each(function() {
				link = $(this).attr('href');
				if(link == current_url){
					$(this).addClass(MCP.activeClass);
					$(this).parents('li').addClass(MCP.activeClass);
				}
			});
			/*If you just want active class visiable in li level0, and remove in all another level, uncomment below code */
			/* $(selector + ' li').each(function() {
				try{
					li_class = $(this).attr('class');
					if (li_class != "" && li_class != undefined) {
						if(li_class.indexOf('level0') == -1) {
							$(this).removeClass(MCP.activeClass);
						}
					}
					
				}catch(error){
					//Do nothing in here
				}
			});*/
		}
	}
	MCP.addActiveClass('.mst .mcp-ver3');
});
</script>